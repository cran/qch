// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fHconfig_sum_update_ptr_parallel
arma::vec fHconfig_sum_update_ptr_parallel(const List& Hconfig, const arma::vec& NewPrior, const arma::mat& Logf0Mat, const arma::mat& Logf1Mat, int threads_nb);
RcppExport SEXP _qch_fHconfig_sum_update_ptr_parallel(SEXP HconfigSEXP, SEXP NewPriorSEXP, SEXP Logf0MatSEXP, SEXP Logf1MatSEXP, SEXP threads_nbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Hconfig(HconfigSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type NewPrior(NewPriorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf0Mat(Logf0MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf1Mat(Logf1MatSEXP);
    Rcpp::traits::input_parameter< int >::type threads_nb(threads_nbSEXP);
    rcpp_result_gen = Rcpp::wrap(fHconfig_sum_update_ptr_parallel(Hconfig, NewPrior, Logf0Mat, Logf1Mat, threads_nb));
    return rcpp_result_gen;
END_RCPP
}
// prior_update_arma_ptr_parallel
arma::vec prior_update_arma_ptr_parallel(const List& Hconfig, const arma::vec& fHconfig_sum, const arma::vec& OldPrior, const arma::mat& Logf0Mat, const arma::mat& Logf1Mat, int threads_nb);
RcppExport SEXP _qch_prior_update_arma_ptr_parallel(SEXP HconfigSEXP, SEXP fHconfig_sumSEXP, SEXP OldPriorSEXP, SEXP Logf0MatSEXP, SEXP Logf1MatSEXP, SEXP threads_nbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Hconfig(HconfigSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type fHconfig_sum(fHconfig_sumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type OldPrior(OldPriorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf0Mat(Logf0MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf1Mat(Logf1MatSEXP);
    Rcpp::traits::input_parameter< int >::type threads_nb(threads_nbSEXP);
    rcpp_result_gen = Rcpp::wrap(prior_update_arma_ptr_parallel(Hconfig, fHconfig_sum, OldPrior, Logf0Mat, Logf1Mat, threads_nb));
    return rcpp_result_gen;
END_RCPP
}
// fHconfig_sum_update_gaussian_copula_ptr_parallel
arma::vec fHconfig_sum_update_gaussian_copula_ptr_parallel(const List& Hconfig, const arma::vec& NewPrior, const arma::mat& Logf0Mat, const arma::mat& Logf1Mat, const arma::mat& zeta0, const arma::mat& zeta1, const arma::mat& R, const arma::mat& Rinv, int threads_nb);
RcppExport SEXP _qch_fHconfig_sum_update_gaussian_copula_ptr_parallel(SEXP HconfigSEXP, SEXP NewPriorSEXP, SEXP Logf0MatSEXP, SEXP Logf1MatSEXP, SEXP zeta0SEXP, SEXP zeta1SEXP, SEXP RSEXP, SEXP RinvSEXP, SEXP threads_nbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Hconfig(HconfigSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type NewPrior(NewPriorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf0Mat(Logf0MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf1Mat(Logf1MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zeta0(zeta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zeta1(zeta1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Rinv(RinvSEXP);
    Rcpp::traits::input_parameter< int >::type threads_nb(threads_nbSEXP);
    rcpp_result_gen = Rcpp::wrap(fHconfig_sum_update_gaussian_copula_ptr_parallel(Hconfig, NewPrior, Logf0Mat, Logf1Mat, zeta0, zeta1, R, Rinv, threads_nb));
    return rcpp_result_gen;
END_RCPP
}
// prior_update_gaussian_copula_ptr_parallel
arma::vec prior_update_gaussian_copula_ptr_parallel(const List& Hconfig, const arma::vec& fHconfig_sum, const arma::vec& OldPrior, const arma::mat& Logf0Mat, const arma::mat& Logf1Mat, const arma::mat& zeta0, const arma::mat& zeta1, const arma::mat& R, const arma::mat& Rinv, int threads_nb);
RcppExport SEXP _qch_prior_update_gaussian_copula_ptr_parallel(SEXP HconfigSEXP, SEXP fHconfig_sumSEXP, SEXP OldPriorSEXP, SEXP Logf0MatSEXP, SEXP Logf1MatSEXP, SEXP zeta0SEXP, SEXP zeta1SEXP, SEXP RSEXP, SEXP RinvSEXP, SEXP threads_nbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Hconfig(HconfigSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type fHconfig_sum(fHconfig_sumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type OldPrior(OldPriorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf0Mat(Logf0MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf1Mat(Logf1MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zeta0(zeta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zeta1(zeta1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Rinv(RinvSEXP);
    Rcpp::traits::input_parameter< int >::type threads_nb(threads_nbSEXP);
    rcpp_result_gen = Rcpp::wrap(prior_update_gaussian_copula_ptr_parallel(Hconfig, fHconfig_sum, OldPrior, Logf0Mat, Logf1Mat, zeta0, zeta1, R, Rinv, threads_nb));
    return rcpp_result_gen;
END_RCPP
}
// R_MLE_update_gaussian_copula_ptr_parallel
arma::mat R_MLE_update_gaussian_copula_ptr_parallel(const List& Hconfig, const arma::vec& fHconfig_sum, const arma::vec& OldPrior, const arma::mat& Logf0Mat, const arma::mat& Logf1Mat, const arma::mat& zeta0, const arma::mat& zeta1, const arma::mat& OldR, const arma::mat& OldRinv, const arma::mat& RhoIndex, int threads_nb);
RcppExport SEXP _qch_R_MLE_update_gaussian_copula_ptr_parallel(SEXP HconfigSEXP, SEXP fHconfig_sumSEXP, SEXP OldPriorSEXP, SEXP Logf0MatSEXP, SEXP Logf1MatSEXP, SEXP zeta0SEXP, SEXP zeta1SEXP, SEXP OldRSEXP, SEXP OldRinvSEXP, SEXP RhoIndexSEXP, SEXP threads_nbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Hconfig(HconfigSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type fHconfig_sum(fHconfig_sumSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type OldPrior(OldPriorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf0Mat(Logf0MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Logf1Mat(Logf1MatSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zeta0(zeta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zeta1(zeta1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type OldR(OldRSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type OldRinv(OldRinvSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type RhoIndex(RhoIndexSEXP);
    Rcpp::traits::input_parameter< int >::type threads_nb(threads_nbSEXP);
    rcpp_result_gen = Rcpp::wrap(R_MLE_update_gaussian_copula_ptr_parallel(Hconfig, fHconfig_sum, OldPrior, Logf0Mat, Logf1Mat, zeta0, zeta1, OldR, OldRinv, RhoIndex, threads_nb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_qch_fHconfig_sum_update_ptr_parallel", (DL_FUNC) &_qch_fHconfig_sum_update_ptr_parallel, 5},
    {"_qch_prior_update_arma_ptr_parallel", (DL_FUNC) &_qch_prior_update_arma_ptr_parallel, 6},
    {"_qch_fHconfig_sum_update_gaussian_copula_ptr_parallel", (DL_FUNC) &_qch_fHconfig_sum_update_gaussian_copula_ptr_parallel, 9},
    {"_qch_prior_update_gaussian_copula_ptr_parallel", (DL_FUNC) &_qch_prior_update_gaussian_copula_ptr_parallel, 10},
    {"_qch_R_MLE_update_gaussian_copula_ptr_parallel", (DL_FUNC) &_qch_R_MLE_update_gaussian_copula_ptr_parallel, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_qch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
